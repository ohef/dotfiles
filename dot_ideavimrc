let mapleader="\<space>"

noremap <leader>re :e ~\\.ideavimrc<enter>
noremap <leader>rs :source ~\\.ideavimrc<enter>

imap <A-t> (
imap <A-c> {
imap <A-n> )
imap <A-r> }
imap <A-h> :

map f /
map F ?
nmap <A-;> :q<enter>
nmap <A-v> V
nmap <A-r> <Action>(Switcher)
map <A-u> <C-u>zz
map <A-e> <C-d>zz
nmap <A-l> <Action>(NextTab)
nmap <A-h> <Action>(PreviousTab)
nnoremap <A-o> <C-o>
nnoremap <A-i> <C-i>
nnoremap <A-j> :action MoveStatementDown<enter>
nnoremap <A-k> :action MoveStatementUp<enter>
vnoremap <A-k> :action MoveLineUp<enter>
vnoremap <A-j> :action MoveLineDown<enter>
nmap <A-n> <Action>(GotoNextError)
nmap <A-S-N> <Action>(GotoPreviousError)
imap <A-p> <C-r>0

xmap <leader>s <Action>(SurroundWith)
xmap <leader>c <Action>(CommentByBlockComment)
"nnoremap <leader>cc <Action>(CommentByLineComment)
nmap <leader>cc :action CommentByLineComment<enter>
nmap <leader>cs <Action>(CommentByBlockComment)

nmap <leader>dc <Action>(Resume)
nmap <leader><leader> <Action>(SearchEverywhere)

nmap <leader>gr "*gr
nnoremap gc :action GotoTypeDeclaration<enter>
nnoremap <leader>w <C-W>
noremap <leader>P "*P

noremap <leader>bb :action ToggleLineBreakpoint<enter>
noremap <leader>bp :action ToggleBreakpointEnabled<enter>
noremap <leader>be :action EditBreakpoint<enter>
noremap <leader>bc :action Resume<enter>
noremap <leader>bm :action XDebugger.MuteBreakpoints<enter>
noremap <leader>bh :action CIDR.Debugger.JumpToLine<enter>

noremap <leader>dd :action Debug<enter>

noremap <leader>f :action ActivateFavoritesToolWindow<enter>
noremap <leader>ff :action ToggleDistractionFreeMode<enter>
noremap <leader>fr :action FindInPath<enter>

noremap <leader>hn :action SelectInProjectView<enter>
nmap <leader>hh <Action>(Switcher)
nmap <leader>hd <Action>(FindUsages)

noremap <leader>p "*p

noremap <leader>rc :action ChangeSignature<enter>
noremap <leader>ri :action Inline<enter>
noremap <leader>rn :action RenameElement<enter>
noremap <leader>rs :w<enter>:source ~\.ideavimrc<enter>
noremap <leader>rv :action IntroduceVariable<enter>
vnoremap <leader>rr :action RefactoringMenu<enter>
nnoremap <leader>rr :action RefactoringMenu<enter>
nnoremap <leader>rp :.,$s/<c-r>"/<c-r>./gc<enter>

nmap <leader>tp <Action>(PinActiveTabToggle)
nnoremap <leader>tt :action AddToFavorites<enter>

noremap <leader>rv :action IntroduceVariable<enter>
map <leader>rw :action SurroundWith<enter>
noremap <leader>t :action AddToFavorites<enter>
noremap <leader>y "*y
"vnoremap <leader>c :action CommentByLineComment<enter>

"Source Control Binds"
nnoremap <leader>vb :action Annotate<enter>

map gs %
map ,h ma
nmap s <Plug>(easymotion-prefix)
xmap s <Plug>(easymotion-prefix)
nnoremap ' `
nnoremap Y y$
nnoremap ; :w<enter>
nnoremap gh H
nnoremap gl L
nmap H ^
nmap L $
nnoremap ' `

set ignorecase
set number
set relativenumber
set NERDTree
set easymotion
set surround
set ideajoin
set ReplaceWithRegister

"Unreal Centric
noremap <leader>df :action RiderLink.StartUnreal<enter>
noremap <leader>dg :action RiderLink.StopUnreal<enter>
nnoremap <leader>un :action Rider.NewFileFromTemplate<enter>

set noideadelaymacro

"C++ Centric 
noremap <leader>ht :action SwitchHeaderSource<enter>
imap \. ->
imap \, =>
